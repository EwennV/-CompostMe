{% extends 'base.html.twig' %}

{% block title %}Carte des Composteurs{% endblock %}

{% block body %}
<div class="container-fluid">
    <div class="row">
        <div class="col-md-3">
            <div class="filters">
                <h3>Filtres</h3>
                <!-- Owner Type Filter -->
                <div class="filter-category">
                    <h4>Owner Type</h4>
                    {% for type in ownerTypes %}
                    <div class="form-check">
                        <input class="form-check-input filter-checkbox ownerType" type="checkbox" value="{{ type.id }}" id="ownerType{{ type.id }}" name="ownerType">
                        <label class="form-check-label" for="ownerType{{ type.id }}">
                            {{ type.name }}
                        </label>
                    </div>
                    {% endfor %}
                </div>

                <!-- Access Type Filter -->
                <div class="filter-category">
                    <h4>Access Type</h4>
                    {% for type in accessTypes %}
                    <div class="form-check">
                        <input class="form-check-input filter-checkbox accessType" type="checkbox" value="{{ type.id }}" id="accessType{{ type.id }}" name="accessType">
                        <label class="form-check-label" for="accessType{{ type.id }}">
                            {{ type.name }}
                        </label>
                    </div>
                    {% endfor %}
                </div>

                <!-- Fill Rate Filter -->
                <div class="filter-category">
                    <h4>Fill Rate</h4>
                    {% for rate in fillRateTypes %}
                    <div class="form-check">
                        <input class="form-check-input filter-checkbox fillRate" type="checkbox" value="{{ rate.id }}" id="fillRate{{ rate.id }}" name="fillRate">
                        <label class="form-check-label" for="fillRate{{ rate.id }}">
                            {{ rate.name }}
                        </label>
                    </div>
                    {% endfor %}
                </div>
                <div class="filters">
                    <button id="applyFilters" class="btn btn-primary mt-3">Appliquer les filtres</button>
                    <button id="resetFilters" class="btn btn-secondary mt-3">Réinitialiser les filtres</button>
                </div>
            </div>
        </div>

        <div class="col-md-6">
            <h3>Liste des Composteurs</h3>
            <div class="list-group" id="composterList">
                <!-- Liste des composteurs injectée ici -->
            </div>
        </div>

        <div class="col-md-3">
            <div id="mapid" style="height: 100vh;"></div>
        </div>
    </div>
</div>
<script>
document.addEventListener('DOMContentLoaded', function () {
    var map = L.map('mapid').setView([44.864984495119764, -0.5782488698590921], 13);
    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
        attribution: '© OpenStreetMap contributors'
    }).addTo(map);

    // Appel initial pour charger les données
    updateMap();

    document.getElementById('applyFilters').addEventListener('click', updateMap);

    document.getElementById('resetFilters').addEventListener('click', function() {
        document.querySelectorAll('.filter-checkbox').forEach(checkbox => {
            checkbox.checked = false;
        });
        updateMap();
    });

    function updateMap() {
        const ownerTypeIds = getSelectedFilterIds('ownerType');
        const accessTypeIds = getSelectedFilterIds('accessType');
        const fillRateIds = getSelectedFilterIds('fillRate');

        fetch(`/composter/filter?ownerType=${ownerTypeIds}&accessType=${accessTypeIds}&fillRate=${fillRateIds}`)
            .then(response => {
                if (!response.ok) throw new Error('Network response was not ok');
                return response.json();
            })
            .then(data => {
                map.eachLayer(layer => {
                    if (layer instanceof L.Marker) map.removeLayer(layer);
                });

                data.composters.forEach(composter => {
                    L.marker([composter.latitude, composter.longitude])
                        .bindPopup(`<b>Composteur :</b> ${composter.contact}`)
                        .addTo(map);
                });
                updateList(data.composters);
            })
            .catch(error => console.error('Error:', error));
}

    function updateList(composters) {
        const listContainer = document.getElementById('composterList');
        listContainer.innerHTML = '';  // Effacez la liste existante
        composters.forEach(composter => {
            const listItem = document.createElement('a');
            listItem.className = 'list-group-item list-group-item-action flex-column align-items-start';
            listItem.innerHTML = `
                <div class="d-flex w-100 justify-content-between">
                    <h5 class="mb-1">${composter.contact}</h5>
                    <small>Longitude: ${composter.longitude}, Latitude: ${composter.latitude}</small>
                </div>
                <p class="mb-1">Owner: ${composter.ownerType}</p>
                <small>Access: ${composter.accessType}</small>`;
            listContainer.appendChild(listItem);
        });
    }



    function getSelectedFilterIds(filterName) {
        return Array.from(document.querySelectorAll(`input[name="${filterName}"]:checked`))
            .map(checkbox => checkbox.value)
            .join(',');
    }
});

</script>
{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.7.1/dist/leaflet.css"
          integrity="sha512-xodZBNTC5n17Xt2atTPuE1HxjVMSvLVW9ocqUKLsCC5CXdbqCmblAshOMAS6/keqq/sMZMZ19scR4PsZChSR7A=="
          crossorigin=""/>
{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script src="https://unpkg.com/leaflet@1.7.1/dist/leaflet.js"
            integrity="sha512-XQoYMqMTK8LvdxXYG3nZ448hOEQiglfqkJs1NOQV44cWnUrBc8PkAOcXy20w0vlaXaVUearIOBhiXZ5V3ynxwA=="
            crossorigin=""></script>
{% endblock %}
