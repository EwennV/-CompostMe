{% extends 'base.html.twig' %}

{% block title %}SOS Compost | Compost &Me{% endblock %}

{% block body %}
    <div class="container-fluid mt-3 col-12 col-md-8 col-lg-5">
        <h1 class="title-underline">Soumettre un SOS</h1>
        <p>Soumettre un SOS avec la fonctionnalité SOS Compost permet de signaler un problème, une dégradation ou tout autre information à propos d'un composteur</p>
        {{ form_start(form) }}
            {{ form_row(form.title) }}
            {{ form_row(form.description) }}
            {{ form_row(form.composter) }}
            <div id="composter-map" class="h-100 w-100" style="min-height: 300px;"></div>

            <button class="btn btn-primary btn-loader w-100 mt-3" type="submit">Soumettre le SOS</button>
        {{ form_end(form) }}
    </div>

    <script src="https://unpkg.com/leaflet@1.7.1/dist/leaflet.js" integrity="sha512-XQoYMqMTK8LvdxXYG3nZ448hOEQiglfqkJs1NOQV44cWnUrBc8PkAOcXy20w0vlaXaVUearIOBhiXZ5V3ynxwA==" crossorigin=""></script>
    <script>
        const map = L.map('composter-map').setView([44.864984495119764, -0.5782488698590921], 12);

        const greenIcon = new L.Icon({
            iconUrl: 'https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-2x-green.png',
            shadowUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/0.7.7/images/marker-shadow.png',
            iconSize: [
                25, 41
            ],
            iconAnchor: [
                12, 41
            ],
            popupAnchor: [
                1, -34
            ],
            shadowSize: [41, 41]
        });

        L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
            attribution: '© OpenStreetMap contributors'
        }).addTo(map);

        {% set composters = [] %}
        {% for composter in form.composter.vars.choices %}
            {% set composters = composters|merge([{'id': composter.data.id,'contact': composter.data.contact, 'longitude': composter.data.longitude, 'latitude': composter.data.latitude}]) %}
        {% endfor %}

        const composters = {{ composters|json_encode()|raw }};
        const composterSelector = document.getElementById({{ form.composter.vars.id }})

        function selectComposter(composter) {
            console.log(composter)
            document.getElementById('{{ form.composter.vars.id }}').value = composter
        }

        composters.forEach((composter) => {
            const text = document.createElement('b');
            text.textContent = `Contact : ${composter['contact']}`

            const button = document.createElement('div');
            button.style = "padding: 10px; background-color: green; color: white; border-radius: 5px; cursor: pointer; text-align: center; margin-top: 5px;"
            button.textContent = "Sélectionner"

            button.addEventListener('click', (event) => {
                selectComposter(event.target.parentElement.getAttribute('data-composter-id'))
            })

            let popup = document.createElement('div')
            popup.setAttribute('data-composter-id', composter.id)
            popup.appendChild(text)
            popup.appendChild(button)

            L.marker([composter['latitude'], composter['longitude']], {icon: greenIcon})
                .addTo(map)
                .bindPopup(popup)
        })
    </script>
{% endblock %}
